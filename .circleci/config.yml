version: 2
jobs:
  decrypt_secrets:
    docker:
      - image: gocreating/ansible-vault
    working_directory: ~/my-working-directory
    environment:
    - PROJECT_NAME: "cubee-api-server"
    steps:
      - checkout
      # https://support.circleci.com/hc/en-us/articles/360016505753-Resolve-Certificate-Signed-By-Unknown-Authority-error-in-Alpine-images
      - run: apk add ca-certificates
      - run:
          name: Decrypt Secret Files
          command: |
            mkdir -p ./my-persist-workspace
            echo $ANSIBLE_VAULT_PASSWORD > /root/ansible_vault.key
            ansible-vault decrypt \
              ./helm-chart/${PROJECT_NAME}/configMap-prod.yaml \
              --output ./my-persist-workspace/configMap-prod.yaml \
              --vault-password-file=/root/ansible_vault.key
            rm /root/ansible_vault.key
      - persist_to_workspace:
          root: ./my-persist-workspace
          paths:
            - configMap-prod.yaml

  deploy_to_production:
    docker:
      - image: google/cloud-sdk
    working_directory: ~/my-working-directory
    environment:
      - PROJECT_NAME: "cubee-api-server"
      - HELM_CHART_NAME: "cubee-api-server"
      - GOOGLE_PROJECT_ID: "cubee-247317"
      - GOOGLE_COMPUTE_ZONE: "us-west1-a"
      - GOOGLE_CLUSTER_NAME: "cubee-prod"
      - DOCKER_REGISTRY_SERVER: "https://index.docker.io/v1/"
    steps:
      - checkout
      - attach_workspace:
          at: ./my-persist-workspace
      - run:
          name: Setup Decrypted Files
          command: |
            mv ./my-persist-workspace/configMap-prod.yaml ./helm-chart/${HELM_CHART_NAME}/templates/configMap.yaml
            apt-get install -qq -y gettext
            envsubst < ./helm-chart/${HELM_CHART_NAME}/values-prod.yaml > ./helm-chart/${HELM_CHART_NAME}/values.yaml
      - run:
          name: Setup Google Cloud SDK
          command: |
            echo $GCLOUD_SERVICE_KEY > ./gcloud-service-key.json
            gcloud auth activate-service-account --key-file=./gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
            rm ./gcloud-service-key.json
      - run:
          name: Setup Helm
          command: |
            curl https://raw.githubusercontent.com/kubernetes/helm/master/scripts/get | bash
            kubectl apply -f rbac-config.yaml
            helm init --service-account tiller --history-max 200
      - setup_remote_docker:
          docker_layer_caching: true
      - run:
          name: Deploy Docker Image
          command: |
            TAG=release-$CIRCLE_SHA1
            docker build \
              --build-arg COMMIT_REF=${CIRCLE_SHA1} \
              --build-arg BUILD_DATE=`date -u +”%Y-%m-%dT%H:%M:%SZ”` \
              -t gocreating/cubee-api-server:$TAG \
              -f ./Dockerfile .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push gocreating/cubee-api-server:$TAG
      # - run:
      #     name: Get the kubeconfig file
      #     command: |
      #       kubectl create secret docker-registry tmp-registry \
      #         --docker-server=$DOCKER_REGISTRY_SERVER \
      #         --docker-username=$DOCKER_USER \
      #         --docker-password=$DOCKER_PASS
      #       envsubst < ./helm-chart/${HELM_CHART_NAME}/values-prod.yaml > ./helm-chart/${HELM_CHART_NAME}/values.yaml
      #       kubectl delete secret tmp-registry

      - run:
          name: Install Chart
          command: |
            helm repo update
            cd ./helm-chart/${HELM_CHART_NAME}
            helm upgrade ${HELM_CHART_NAME} . -f values.yaml --install --force
            helm ls

workflows:
  version: 2
  build_image_and_deploy:
    jobs:
      - decrypt_secrets
      - deploy_to_production:
          requires:
            - decrypt_secrets
          filters:
            branches:
              only: master
