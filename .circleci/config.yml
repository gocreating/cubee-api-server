version: 2
jobs:
  # build:
  #   docker:
  #     - image: docker:17.05.0-ce-git
  #   steps:
  #     - checkout
  #     - setup_remote_docker:
  #         docker_layer_caching: true
  #     - run:
  #         name: Docker build and push
  #         command: |
  #           TAG=release-$CIRCLE_SHA1
  #           docker build \
  #             --build-arg COMMIT_REF=${CIRCLE_SHA1} \
  #             --build-arg BUILD_DATE=`date -u +”%Y-%m-%dT%H:%M:%SZ”` \
  #             -t gocreating/cubee-api-server:$TAG .
  #           docker login -u $DOCKER_USER -p $DOCKER_PASS
  #           docker push gocreating/cubee-api-server:$TAG

  deploy_to_production:
    docker:
      - image: google/cloud-sdk
    environment:
      - PROJECT_NAME: "cubee-api-server"
      - GOOGLE_PROJECT_ID: "cubee-247317"
      - GOOGLE_COMPUTE_ZONE: "asia-southeast1-a"
      - GOOGLE_CLUSTER_NAME: "cubee-production"
      - DOCKER_REGISTRY_SERVER: "https://index.docker.io/v1/"
    steps:
      - checkout
      - run:
          name: Setup Google Cloud SDK
          command: |
            apt-get install -qq -y gettext
            echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}
      - setup_remote_docker
      - run:
          name: Docker build and push
          command: |
            TAG=release-$CIRCLE_SHA1
            docker build \
              --build-arg COMMIT_REF=${CIRCLE_SHA1} \
              --build-arg BUILD_DATE=`date -u +”%Y-%m-%dT%H:%M:%SZ”` \
              -t gocreating/cubee-api-server:$TAG .
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker push gocreating/cubee-api-server:$TAG
      - run:
          name: Deploy to Kubernetes
          command: |
            kubectl create secret docker-registry some-registry \
              --docker-server=$DOCKER_REGISTRY_SERVER \
              --docker-username=$DOCKER_USER \
              --docker-password=$DOCKER_PASS
            envsubst < ${HOME}/project/k8s.yml > ${HOME}/patched_k8s.yml
            kubectl apply -f ${HOME}/patched_k8s.yml
            kubectl rollout status deployment/${PROJECT_NAME}

workflows:
  version: 2
  build_image_and_deploy:
    jobs:
      - deploy_to_production:
          filters:
            branches:
              only: master
